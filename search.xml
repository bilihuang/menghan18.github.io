<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git]]></title>
    <url>%2F%E5%B7%A5%E5%85%B7%2Fgit%2F</url>
    <content type="text"><![CDATA[git常用命令 一、新建代码库 $ git init 在当前目录新建一个Git代码库 $ git init [project-name] 新建一个目录，将其初始化为Git代码库 $ git clone [url] 下载一个项目和它的整个代码历史 二、配置 $ git config –list显示当前的Git配置 $ git config -e [–global]编辑Git配置文件 $ git config [–global] user.name “[name]” $ git config [–global] user.email “[email address]”设置提交代码时的用户信息 三、添加删除 $ git add [file1] [file2] …添加指定文件到暂存区 $ git add [dir]添加指定目录到暂存区，包括子目录 $ git add .添加当前目录的所有文件到暂存区 $ git add -p添加每个变化前，都会要求确认对于同一个文件的多处变化，可以实现分次提交 $ git rm [file1] [file2] …删除工作区文件，并且将这次删除放入暂存区 $ git rm –cached [file]停止追踪指定文件，但该文件会保留在工作区 $ git mv [file-original] [file-renamed]改名文件，并且将这个改名放入暂存区 四、代码提交 $ git commit -m [message]提交暂存区到仓库区 $ git commit [file1] [file2] … -m [message]提交暂存区的指定文件到仓库区 $ git commit -a提交工作区自上次commit之后的变化，直接到仓库区 git commit -v提交时显示所有diff信息 $ git commit –amend -m [message] 使用一次新的commit，替代上一次提交 如果代码没有任何新变化，则用来改写上一次commit的提交信息 $ git commit –amend [file1] [file2] …重做上一次commit，并包括指定文件的新变化]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
